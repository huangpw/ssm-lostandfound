<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.school.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="edu.school.entity.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="stuno" jdbcType="VARCHAR" property="stuno" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="nick_name" jdbcType="VARCHAR" property="nick_name" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, stuno, pwd, phone, photo, sex, province, create_time, nick_name, grade
  </sql>
  <select id="selectByExample" parameterType="edu.school.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.school.entity.UserExample">
    delete from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.school.entity.User">
    insert into t_user (id, stuno, pwd, 
      phone, photo, sex, 
      province, create_time, nick_name, 
      grade)
    values (#{id,jdbcType=INTEGER}, #{stuno,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{province,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, #{nick_name,jdbcType=VARCHAR}, 
      #{grade,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.school.entity.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="stuno != null">
        stuno,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="photo != null">
        photo,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="nick_name != null">
        nick_name,
      </if>
      <if test="grade != null">
        grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuno != null">
        #{stuno,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="nick_name != null">
        #{nick_name,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.school.entity.UserExample" resultType="java.lang.Long">
    select count(*) from t_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuno != null">
        stuno = #{record.stuno,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null">
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.photo != null">
        photo = #{record.photo,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.nick_name != null">
        nick_name = #{record.nick_name,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user
    set id = #{record.id,jdbcType=INTEGER},
      stuno = #{record.stuno,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      photo = #{record.photo,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      province = #{record.province,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      nick_name = #{record.nick_name,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.school.entity.User">
    update t_user
    <set>
      <if test="stuno != null">
        stuno = #{stuno,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="nick_name != null">
        nick_name = #{nick_name,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.school.entity.User">
    update t_user
    set stuno = #{stuno,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      province = #{province,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      nick_name = #{nick_name,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--int deleteMany(String [] ids);批量删除-->
  <delete id="deleteMany" parameterType="java.lang.String" >
    delete  from  t_user where id in
    <foreach item="ids" collection="array" index="no" open="(" separator="," close=")">
      #{ids}
    </foreach>
  </delete>
  <!--User findByStunoAndPwd(String username, String password);-->
  <select id="findByStunoAndPwd" parameterType="edu.school.entity.User" resultMap="BaseResultMap">
    select
      *
    from t_user
    where stuno = #{stuno}
      and pwd = #{pwd}
  </select>

</mapper>