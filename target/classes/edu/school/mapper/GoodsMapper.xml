<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.school.mapper.GoodsMapper">
  <resultMap id="BaseResultMap" type="edu.school.entity.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="goods_name" jdbcType="VARCHAR" property="goods_name" />
    <result column="spot" jdbcType="VARCHAR" property="spot" />
    <result column="gods_img" jdbcType="VARCHAR" property="gods_img" />
    <result column="create_date" jdbcType="VARCHAR" property="create_date" />
    <result column="create_time" jdbcType="TIMESTAMP" property="create_time" />
    <result column="user_id" jdbcType="INTEGER" property="user_id" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="edu.school.entity.Goods">
    <result column="detail" jdbcType="LONGVARCHAR" property="detail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, goods_name, spot, gods_img, create_date, create_time, user_id, note
  </sql>
  <sql id="Blob_Column_List">
    detail
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="edu.school.entity.GoodsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="edu.school.entity.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.school.entity.GoodsExample">
    delete from t_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.school.entity.Goods">
    insert into t_goods (id, goods_name, spot, 
      gods_img, create_date, create_time, 
      user_id, note, detail
      )
    values (#{id,jdbcType=INTEGER}, #{goods_name,jdbcType=VARCHAR}, #{spot,jdbcType=VARCHAR}, 
      #{gods_img,jdbcType=VARCHAR}, #{create_date,jdbcType=VARCHAR}, #{create_time,jdbcType=TIMESTAMP}, 
      #{user_id,jdbcType=INTEGER}, #{note,jdbcType=VARCHAR}, #{detail,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.school.entity.Goods">
    insert into t_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goods_name != null">
        goods_name,
      </if>
      <if test="spot != null">
        spot,
      </if>
      <if test="gods_img != null">
        gods_img,
      </if>
      <if test="create_date != null">
        create_date,
      </if>
      <if test="create_time != null">
        create_time,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="detail != null">
        detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="goods_name != null">
        #{goods_name,jdbcType=VARCHAR},
      </if>
      <if test="spot != null">
        #{spot,jdbcType=VARCHAR},
      </if>
      <if test="gods_img != null">
        #{gods_img,jdbcType=VARCHAR},
      </if>
      <if test="create_date != null">
        #{create_date,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.school.entity.GoodsExample" resultType="java.lang.Long">
    select count(*) from t_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.goods_name != null">
        goods_name = #{record.goods_name,jdbcType=VARCHAR},
      </if>
      <if test="record.spot != null">
        spot = #{record.spot,jdbcType=VARCHAR},
      </if>
      <if test="record.gods_img != null">
        gods_img = #{record.gods_img,jdbcType=VARCHAR},
      </if>
      <if test="record.create_date != null">
        create_date = #{record.create_date,jdbcType=VARCHAR},
      </if>
      <if test="record.create_time != null">
        create_time = #{record.create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.user_id != null">
        user_id = #{record.user_id,jdbcType=INTEGER},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update t_goods
    set id = #{record.id,jdbcType=INTEGER},
      goods_name = #{record.goods_name,jdbcType=VARCHAR},
      spot = #{record.spot,jdbcType=VARCHAR},
      gods_img = #{record.gods_img,jdbcType=VARCHAR},
      create_date = #{record.create_date,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      user_id = #{record.user_id,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR},
      detail = #{record.detail,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_goods
    set id = #{record.id,jdbcType=INTEGER},
      goods_name = #{record.goods_name,jdbcType=VARCHAR},
      spot = #{record.spot,jdbcType=VARCHAR},
      gods_img = #{record.gods_img,jdbcType=VARCHAR},
      create_date = #{record.create_date,jdbcType=VARCHAR},
      create_time = #{record.create_time,jdbcType=TIMESTAMP},
      user_id = #{record.user_id,jdbcType=INTEGER},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.school.entity.Goods">
    update t_goods
    <set>
      <if test="goods_name != null">
        goods_name = #{goods_name,jdbcType=VARCHAR},
      </if>
      <if test="spot != null">
        spot = #{spot,jdbcType=VARCHAR},
      </if>
      <if test="gods_img != null">
        gods_img = #{gods_img,jdbcType=VARCHAR},
      </if>
      <if test="create_date != null">
        create_date = #{create_date,jdbcType=VARCHAR},
      </if>
      <!--<if test="create_time != null">-->
      <!--  create_time = #{create_time,jdbcType=TIMESTAMP},-->
      <!--</if>-->
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="edu.school.entity.Goods">
    update t_goods
    set goods_name = #{goods_name,jdbcType=VARCHAR},
      spot = #{spot,jdbcType=VARCHAR},
      gods_img = #{gods_img,jdbcType=VARCHAR},
      create_date = #{create_date,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      user_id = #{user_id,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.school.entity.Goods">
    update t_goods
    set goods_name = #{goods_name,jdbcType=VARCHAR},
      spot = #{spot,jdbcType=VARCHAR},
      gods_img = #{gods_img,jdbcType=VARCHAR},
      create_date = #{create_date,jdbcType=VARCHAR},
      create_time = #{create_time,jdbcType=TIMESTAMP},
      user_id = #{user_id,jdbcType=INTEGER},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--int deleteMany(String [] ids);批量删除-->
  <delete id="deleteMany" parameterType="java.lang.String" >
    delete  from  t_goods where id in
    <foreach item="ids" collection="array" index="no" open="(" separator="," close=")">
      #{ids}
    </foreach>
  </delete>
</mapper>